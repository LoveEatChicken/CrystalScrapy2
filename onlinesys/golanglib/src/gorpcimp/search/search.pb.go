// Code generated by protoc-gen-go.
// source: search.proto
// DO NOT EDIT!

/*
Package search is a generated protocol buffer package.

It is generated from these files:
	search.proto

It has these top-level messages:
	SeRequest
	SeResponse
	SeDoc
*/
package search

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SeRequest struct {
	LogId string `protobuf:"bytes,1,opt,name=log_id,json=logId" json:"log_id,omitempty"`
	Query string `protobuf:"bytes,2,opt,name=query" json:"query,omitempty"`
	// 是否调试模式
	IsDebug bool `protobuf:"varint,3,opt,name=is_debug,json=isDebug" json:"is_debug,omitempty"`
	// 结果分页,返回第page_num页,从0开始计数
	PageNum int32 `protobuf:"varint,4,opt,name=page_num,json=pageNum" json:"page_num,omitempty"`
	// 搜索分页, 每页大小page_size,
	PageSize int32 `protobuf:"varint,5,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *SeRequest) Reset()                    { *m = SeRequest{} }
func (m *SeRequest) String() string            { return proto.CompactTextString(m) }
func (*SeRequest) ProtoMessage()               {}
func (*SeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SeResponse struct {
	// 返回结果数
	RetNum int32 `protobuf:"varint,1,opt,name=ret_num,json=retNum" json:"ret_num,omitempty"`
	// 显示的总结果数
	DispNum int32 `protobuf:"varint,2,opt,name=disp_num,json=dispNum" json:"disp_num,omitempty"`
	// 返回的ret_num个结果
	// 每个结果数一个string，可定制
	// 一般实现为json串
	ResList []*SeDoc `protobuf:"bytes,3,rep,name=res_list,json=resList" json:"res_list,omitempty"`
	// Query级别的debug信息
	Debug string `protobuf:"bytes,4,opt,name=debug" json:"debug,omitempty"`
}

func (m *SeResponse) Reset()                    { *m = SeResponse{} }
func (m *SeResponse) String() string            { return proto.CompactTextString(m) }
func (*SeResponse) ProtoMessage()               {}
func (*SeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SeResponse) GetResList() []*SeDoc {
	if m != nil {
		return m.ResList
	}
	return nil
}

// 一个检索结果
type SeDoc struct {
	// 基础文本相关性
	Bweight int32 `protobuf:"varint,1,opt,name=bweight" json:"bweight,omitempty"`
	// 调权后相关性
	Weight int32 `protobuf:"varint,2,opt,name=weight" json:"weight,omitempty"`
	// 结果内容，字符串允许自由定制
	Data string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	// debug信息
	Debug string `protobuf:"bytes,4,opt,name=debug" json:"debug,omitempty"`
}

func (m *SeDoc) Reset()                    { *m = SeDoc{} }
func (m *SeDoc) String() string            { return proto.CompactTextString(m) }
func (*SeDoc) ProtoMessage()               {}
func (*SeDoc) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*SeRequest)(nil), "search.SeRequest")
	proto.RegisterType((*SeResponse)(nil), "search.SeResponse")
	proto.RegisterType((*SeDoc)(nil), "search.SeDoc")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Searcher service

type SearcherClient interface {
	Search(ctx context.Context, in *SeRequest, opts ...grpc.CallOption) (*SeResponse, error)
}

type searcherClient struct {
	cc *grpc.ClientConn
}

func NewSearcherClient(cc *grpc.ClientConn) SearcherClient {
	return &searcherClient{cc}
}

func (c *searcherClient) Search(ctx context.Context, in *SeRequest, opts ...grpc.CallOption) (*SeResponse, error) {
	out := new(SeResponse)
	err := grpc.Invoke(ctx, "/search.Searcher/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Searcher service

type SearcherServer interface {
	Search(context.Context, *SeRequest) (*SeResponse, error)
}

func RegisterSearcherServer(s *grpc.Server, srv SearcherServer) {
	s.RegisterService(&_Searcher_serviceDesc, srv)
}

func _Searcher_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearcherServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/search.Searcher/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearcherServer).Search(ctx, req.(*SeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Searcher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "search.Searcher",
	HandlerType: (*SearcherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _Searcher_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("search.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x91, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x86, 0x49, 0xdb, 0x7c, 0x1d, 0x30, 0x70, 0xe2, 0xc3, 0xc0, 0x82, 0x32, 0x75, 0xaa, 0x44,
	0x99, 0xd9, 0xba, 0x20, 0x21, 0x06, 0xe7, 0x07, 0x44, 0x69, 0x73, 0x4a, 0x2d, 0xb5, 0x4d, 0xb0,
	0x1d, 0x21, 0x98, 0xd8, 0xf9, 0xd3, 0xd8, 0xe7, 0x20, 0x18, 0xd8, 0xfc, 0xf8, 0x39, 0xdd, 0xbd,
	0x67, 0xc3, 0x89, 0xa1, 0x5a, 0x6f, 0xb6, 0x8b, 0x5e, 0x77, 0xb6, 0xc3, 0x24, 0x50, 0xf1, 0x15,
	0x41, 0x5e, 0x92, 0xa4, 0xd7, 0x81, 0x8c, 0xc5, 0x0b, 0x48, 0x76, 0x5d, 0x5b, 0xa9, 0x46, 0x44,
	0x77, 0xd1, 0x3c, 0x97, 0xb1, 0xa3, 0xa7, 0x06, 0xcf, 0x21, 0x76, 0x5e, 0xbf, 0x8b, 0x49, 0xb8,
	0x65, 0xc0, 0x6b, 0xc8, 0x94, 0xa9, 0x1a, 0x5a, 0x0f, 0xad, 0x98, 0x3a, 0x91, 0xc9, 0x54, 0x99,
	0x95, 0x47, 0xaf, 0xfa, 0xba, 0xa5, 0xea, 0x30, 0xec, 0xc5, 0xcc, 0xa9, 0x58, 0xa6, 0x9e, 0x5f,
	0x86, 0x3d, 0xde, 0x42, 0xce, 0xca, 0xa8, 0x0f, 0x12, 0x31, 0x3b, 0xae, 0x2d, 0x1d, 0x17, 0x9f,
	0x11, 0x80, 0x4f, 0x63, 0xfa, 0xee, 0x60, 0x08, 0xaf, 0x20, 0xd5, 0x64, 0xb9, 0x4b, 0xc4, 0x95,
	0x89, 0x43, 0xdf, 0xc4, 0xf5, 0x6f, 0x94, 0xe9, 0xd9, 0x4c, 0x42, 0x7f, 0xcf, 0x5e, 0xcd, 0x21,
	0xd3, 0x64, 0xaa, 0x9d, 0x32, 0xd6, 0xa5, 0x9a, 0xce, 0x8f, 0x97, 0xa7, 0x8b, 0x71, 0xf3, 0x92,
	0x56, 0xdd, 0x46, 0xba, 0x96, 0xe6, 0xd9, 0x59, 0xbf, 0x55, 0x08, 0x3f, 0x0b, 0x5b, 0x31, 0x14,
	0x1b, 0x88, 0xb9, 0x0e, 0x05, 0xa4, 0xeb, 0x37, 0x52, 0xed, 0xd6, 0x8e, 0xc3, 0x7f, 0x10, 0x2f,
	0x21, 0x19, 0x45, 0x98, 0x3d, 0x12, 0x22, 0xcc, 0x9a, 0xda, 0xd6, 0xfc, 0x18, 0xb9, 0xe4, 0xf3,
	0xff, 0x43, 0x96, 0x8f, 0x90, 0x95, 0x9c, 0x89, 0x34, 0xde, 0x43, 0x12, 0xce, 0x78, 0xf6, 0x1b,
	0x74, 0xfc, 0x90, 0x1b, 0xfc, 0x7b, 0x15, 0x5e, 0xa5, 0x38, 0x5a, 0x27, 0xfc, 0x87, 0x0f, 0xdf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x0b, 0x90, 0x42, 0xd3, 0x01, 0x00, 0x00,
}
